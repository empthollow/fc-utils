#!/bin/bash

# Declare Variables


if [ -f /etc/conf.d/f2hdvar ]; then
. /etc/conf.d/f2hdvar
else
username=flux
password=password
partition=/dev/sdxx
swap=$(fdisk -l | grep -m 1 swap | grep -o '/dev/sd[a-z][0-9]')
target=/media/targethd
groups=storage,floppy,optical,audio,video,network,games,wheel,disk
hostnm=FluxCapacity
status=Complete
arch=i686
fi

error()
{
if [ "$?" != "0" ]; then
status=Failed
unmount
exit 1
fi
}

unmount()
{
# unmount
echo "Unmounting File Systems"
umount $target/proc
umount $target/sys
umount $target/dev
umount /media/live
umount /dev/loop0
umount /media/mnt
umount $target

echo "Installation $status [Press Enter]"
read
}


writevar()
{
echo "username=$username
password=$password
partition=$partition
swap=$swap
target=$target
groups=$groups
hostnm=$hostnm
status=$status
arch=$arch" > /etc/conf.d/f2hdvar
}

setvalues()
{
setme=
until [ "$setme" = "0" ]; do
clear
echo ""
echo "VARIABLES"
echo "1 - Username: $username"
echo "2 - Partition: $partition"
echo "3 - Swap: $swap"
echo "4 - Mount Directory: $target"
echo "5 - User's Groups: $groups"
echo "6 - Hostname: $hostnm"
echo "0 - Done"
echo ""
echo -n "Enter Selection >"
read setme
case $setme in
	1	)	clear; echo -n "Enter Username >"; read username ;;
	2	)	clear; fdisk -l; echo -n "Enter Root Partition >"; read partition ;;
	3	)	clear; fdisk -l; echo -n "Enter Swap Partition >"; read swap ;;
	4	)	clear; echo -n "Enter Mount Directory >"; read target ;;
	5	)	clear; echo -n "Enter Groups >"; read groups ;;
	6	)	clear; echo -n "Enter Hostname >"; read hostnm ;;
	0	)	writevar ; setme=0 ;;
	*	)	echo "Try again [Press Enter]" ; read ;;
esac
done
}

prepchroot()
{
# prepare chroot for use
echo "Mounting File Systems"
swapon $swap
cp /etc/resolv.conf $target/etc/
mount -t proc proc $target/proc
mount -t sysfs sys $target/sys
mount -o bind /dev $target/dev
}

filemods()
{
# File System Modifications for permanent install
echo "File Mods"
sed -i 's/!alsa/alsa/g' $target/etc/rc.conf
sed -i 's/!crond/crond/g' $target/etc/rc.conf
error
sed -i '/aufs/d' $target/etc/fstab
error
echo "$partition		/		auto	defaults	0	0" >> $target/etc/fstab
error
echo "/dev/cdrom		/media/cd		auto		ro,user,noauto	0	0" >> $target/etc/fstab
error
echo "/dev/dvd		/media/dvd		auto		ro,user,noauto	0	0" >> $target/etc/fstab
error
sed -i 's/FluxCapacity/'$hostnm'/g' $target/etc/rc.conf
error
sed -i '27 s/^#//' $target/etc/inittab
error
sed -i '28 s/c1/#c1/' $target/etc/inittab
error
sed -i '28 s/flux/$userneme/' $target/etc/inittab
error
battery=$(ls /sys/class/power_supply | grep BAT)
if [ -n $battery ]; then
sed -i s/BAT/$battery/g $target/etc/skel/.conkyrc
sed -i '41 s/^#//' $target/etc/skel/.conkyrc
sed -i '42 s/^#//' $target/etc/skel/.conkyrc
fi
error
sed -i '8,100 d' $target/etc/rc.local
error
echo "# Create fstab, bookmarks and mount
for dev in \$(ls /dev/disk/by-label/ | grep -v Flux_Capacity) ; do
        mkdir /media/\$dev
        echo \"/dev/disk/by-label/\$dev /media/\$dev auto defaults,users,rw 0 0\" >> /etc/fstab
        echo \"file:///media/\$dev \$dev\" >> /home/flux/.gtk-bookmarks
        echo \"\\\${if_mounted /media/\$dev}\\\${color gray}\$dev\\\${color #707070}: \\\$color\\\${fs_used /media/\$dev}/\\\${fs_size /media/\$dev} 
 \\\${color gray}Free\\\${color #707070}: \\\$color\\\${fs_free /media/\$dev} \\\${fs_bar /media/\$dev}\\\${endif}\" >> /etc/skel/.conkyrc
mount -a
updatedb &
sed -i '8,30 d' /etc/rc.local" >> $target/etc/rc.local
error

}

chcmds()
{
# excecute chroot commands
echo "Generating Locals"
edlo=
echo -n "Edit locale.gen? [(v)im/n(a)no/(N)o] >"
read edlo
case $edlo in
	v | V	)	vim $target/etc/locale.gen ;;
	a | A	)	nano $target/etc/locale.gen ;;
	*	)	;;
esac
chroot $target locale-gen
echo "Configuring initrd"
chroot $target mkinitcpio -p linux
error
echo "Configuring Sound"
chroot $target amixer set PCM 100% unmute
chroot $target amixer set Master 90% unmute
chroot $target alsactl store
echo "adding User"
chroot $target useradd -u 1000 -g users -G $groups -m $username
error

}

setpass()
{
chroot $target passwd $username
[ "$?" = "0" ] || setpass

}


formatparts()
{
if [ "$partition" == "/dev/sdxx" ]; then
echo "you must change the install partition [Press Enter]"
read
setvalues
fi

echo "$partition will be formated as ext4"
echo "$swap will be formated as swap"
echo -n "Is this correct? [y/n/e(edit)] >"
fp=
read fp
case $fp in
	y | Y	) umount $swap ; mkswap $swap ; umount /media/tmp ; umount $partition ; mkfs.ext4 -j -O dir_index -L $hostnm $partition ; echo "Done [Press Enter]"; read ;;
	n | N	) echo "NO CHANGES WERE MADE [Press Enter]" ; read ;;
	e | E	) setvalues  ; formatparts ;; 
	*	) echo "Try again [Press Enter]" ; read ; formatparts ;;
esac
}

installcd()
{
if [ "$partition" == "/dev/sdxx" ]; then
echo "you must change the install partition [Press Enter]"
read
setvalues
fi

#get live cd filesystem
echo "Preparing"
test -d /media/live || mkdir /media/live
if [ -z "$(cat /proc/mounts | grep /media/live)" ]; then
mount -v -r -o loop /dev/disk/by-label/Flux_Capacity /media/live
fi
test -d $target || mkdir $target
mount $partition $target
echo "Getting Filesystem image"
unsquashfs -f -d $target /media/live/fluxstall/i686/root-image.fs.sfs
error
umount /media/live
test -d /media/tmp || mkdir /media/tmp
error
mount -t ext4 $target/root-image.fs /media/tmp
error
echo "Coping Files....."
cp -ar /media/tmp/* $target
error
rm $target/root-image.fs

prepchroot
filemods
chcmds
setpass

# unmount
unmount
}

installfresh()
{
test -d $target || mkdir $target
mount $partition $target
mkdir -p $target/var/lib/pacman 
pacman -Sy -r $target
mkdir -p ${new_arch}/var/cache/pacman/pkg
pacman  -Su base --cachedir $target/var/cache/pacman/pkg -r $target
prepchroot
cp /etc/pacman.d/mirrorlist $target/etc/pacman.d/
pacman -Qeq > /tmp/packages.list

prepkg=
echo -n "Edit packages.list? [(v)im/n(a)no/(N)o] >"
read prepkg
case $prepkg in
	v | V	)	vim /tmp/packages.list ;;
	a | A	)	nano /tmp/packages.list ;;
	*	)	;;
esac
pacman --cachedir $target/var/cache/pacman/pkg -r $target -S $(cat /tmp/packages.list)

prepchroot
modme=
echo -n "Apply Flux Capacity Custom Files? [Y/n] >"
read modme

case $modme in
	n | N	)	;;
	*	)	tar -xf /etc/overlay.tar.gz -C $target ; filemods ;;
esac

chcmds
setpass

# unmount
unmount
}


grubins()
{
if [ "$partition" == "/dev/sdxx" ]; then
echo "you must change the install partition [Press Enter]"
read
setvalues
fi

grubpart=$(echo $partition | grep -o [0-9])
((grubpart--))
grubnum=$(echo $partition | sed s/[0-9]// | sed "s/\/dev\/sd//g")
case $grubnum in
	a ) grubdisk="hd0" ;;
	b ) grubdisk="hd1" ;;
	c ) grubdisk="hd2" ;;
	d ) grubdisk="hd3" ;;
	e ) grubdisk="hd4" ;;
	f ) grubdisk="hd5" ;;
	g ) grubdisk="hd6" ;;
	h ) grubdisk="hd7" ;;
	i ) grubdisk="hd8" ;;
	j ) grubdisk="hd9" ;;
	* ) echo "grubdisk not set"; error ;;
esac


test -d $target || mkdir $target
[ $(cat /proc/mounts | grep $target ) ] || mount $partition $target
error

echo "Installing Grub"
grub-install --recheck --no-floppy --root-directory=$target --force-lba $(echo $partition | sed s/[0-9]//g)
error

mv $target/boot/grub/menu.lst $target/boot/grub/menu.lst.preflux

echo "Generating grub.cfg"
echo "Your existing menu has been renamed to menu.lst.preflux"

echo "Config file for GRUB - The GNU GRand Unified Bootloader
# /boot/grub/menu.lst

# DEVICE NAME CONVERSIONS 
#
#  Linux           Grub
# -------------------------
#  /dev/fd0        (fd0)
#  /dev/sda        (hd0)
#  /dev/sdb2       (hd1,1)
#  /dev/sda3       (hd0,2)
#

#  FRAMEBUFFER RESOLUTION SETTINGS
#     +-------------------------------------------------+
#          | 640x480    800x600    1024x768   1280x1024
#      ----+--------------------------------------------
#      256 | 0x301=769  0x303=771  0x305=773   0x307=775
#      32K | 0x310=784  0x313=787  0x316=790   0x319=793
#      64K | 0x311=785  0x314=788  0x317=791   0x31A=794
#      16M | 0x312=786  0x315=789  0x318=792   0x31B=795
#     +-------------------------------------------------+
#  for more details and different resolutions see
#  http://wiki.archlinux.org/index.php/GRUB#Framebuffer_Resolution 

# general configuration:
timeout   5
default  0 
color light-blue/black light-cyan/blue

# boot sections follow
# each is implicitly numbered from 0 in the order of appearance below
#
# TIP: If you want a 1024x768 framebuffer, add "vga=773" to your kernel line.
#
#-*

# (0) Flux Linux
title  $hostnm 
root   ($grubdisk,$grubpart)
kernel /boot/vmlinuz-linux root=$partition ro
initrd /boot/initramfs-linux.img

# (1) Windows
#title Windows
#root	(hd0,1)
#makeactive
#chainloader +1" > $target/boot/grub/menu.lst

umount $target
echo "press [enter] to continue ..."
read
}

if [ "$(id -u)" != "0" ]; then
echo "You must be root for this to work"
else


selection=
until [ "$selection" = "00" ]; do
clear
echo "                                   Flux Installer 2.2"
echo ""
echo "***********************************  VARIABLES  ***************************"
echo "Username: $username"
echo "Partition: $partition"
echo "Swap: $swap"
echo "Mount Directory: $target"
echo "Users Groups: $groups"
echo "Host Name: $hostnm"
echo "***************************************************************************"
echo ""
echo "1  - Partition with cfdisk"
echo "2  - Format Partitions"
echo "3  - Install to HD (As on cd)"
echo "4  - Install grub"
echo "0  - Change Variables"
echo "00 - Exit"
echo ""
echo -n "Enter Selection >"
    read selection
    case $selection in
	1 	) cfdisk ;;
	2	) formatparts ;;
	3	) installcd ;;
	4	) grubins ;;
	0	) setvalues ;;
	00 	) clear; exit ;;
	* 	) echo "Please enter a valid selection [ Press Enter ]" ; read ;;
    esac
done
fi
